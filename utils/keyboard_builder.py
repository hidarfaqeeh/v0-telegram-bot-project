from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from typing import List, Dict, Any

class KeyboardBuilder:
    @staticmethod
    def main_menu() -> InlineKeyboardMarkup:
        """Build main menu keyboard"""
        keyboard = [
            [
                InlineKeyboardButton("üìã ÿ•ÿØÿßÿ±ÿ© ÿßŸÑŸÖŸáÿßŸÖ", callback_data="tasks_menu"),
                InlineKeyboardButton("üìä ÿßŸÑÿ•ÿ≠ÿµÿßÿ¶Ÿäÿßÿ™", callback_data="statistics")
            ],
            [
                InlineKeyboardButton("‚öôÔ∏è ÿßŸÑÿ•ÿπÿØÿßÿØÿßÿ™", callback_data="settings"),
                InlineKeyboardButton("üë• ÿ•ÿØÿßÿ±ÿ© ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖŸäŸÜ", callback_data="users_menu")
            ],
            [
                InlineKeyboardButton("ü§ñ Userbot", callback_data="userbot_menu"),
                InlineKeyboardButton("‚ÑπÔ∏è ÿßŸÑŸÖÿ≥ÿßÿπÿØÿ©", callback_data="help")
            ]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def tasks_menu() -> InlineKeyboardMarkup:
        """Build tasks menu keyboard"""
        keyboard = [
            [
                InlineKeyboardButton("‚ûï ÿ•ŸÜÿ¥ÿßÿ° ŸÖŸáŸÖÿ© ÿ¨ÿØŸäÿØÿ©", callback_data="create_task"),
                InlineKeyboardButton("üìã ÿπÿ±ÿ∂ ÿßŸÑŸÖŸáÿßŸÖ", callback_data="view_tasks")
            ],
            [
                InlineKeyboardButton("‚ö° ÿßŸÑŸÖŸáÿßŸÖ ÿßŸÑŸÜÿ¥ÿ∑ÿ©", callback_data="active_tasks"),
                InlineKeyboardButton("‚è∏Ô∏è ÿßŸÑŸÖŸáÿßŸÖ ÿßŸÑŸÖÿ™ŸàŸÇŸÅÿ©", callback_data="inactive_tasks")
            ],
            [
                InlineKeyboardButton("üîô ÿßŸÑÿπŸàÿØÿ©", callback_data="main_menu")
            ]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def task_settings_menu(task_id: int) -> InlineKeyboardMarkup:
        """Build task settings menu"""
        keyboard = [
            [
                InlineKeyboardButton("üìù ÿ™ÿπÿØŸäŸÑ ÿßŸÑÿ•ÿπÿØÿßÿØÿßÿ™", callback_data=f"edit_task_{task_id}"),
                InlineKeyboardButton("üîÑ ÿ™ÿ®ÿØŸäŸÑ ÿßŸÑÿ≠ÿßŸÑÿ©", callback_data=f"toggle_task_{task_id}")
            ],
            [
                InlineKeyboardButton("üéØ ŸÅŸÑÿßÿ™ÿ± ÿßŸÑŸàÿ≥ÿßÿ¶ÿ∑", callback_data=f"media_filters_{task_id}"),
                InlineKeyboardButton("üîç ŸÅŸÑÿßÿ™ÿ± ÿßŸÑŸÜÿµ", callback_data=f"text_filters_{task_id}")
            ],
            [
                InlineKeyboardButton("‚ö° ŸÅŸÑÿßÿ™ÿ± ŸÖÿ™ŸÇÿØŸÖÿ©", callback_data=f"advanced_filters_{task_id}"),
                InlineKeyboardButton("üë• ÿßŸÑŸÇŸàÿßÿ¶ŸÖ ÿßŸÑÿ®Ÿäÿ∂ÿßÿ°/ÿßŸÑÿ≥ŸàÿØÿßÿ°", callback_data=f"user_lists_{task_id}")
            ],
            [
                InlineKeyboardButton("üîÑ ÿßŸÑÿßÿ≥ÿ™ÿ®ÿØÿßŸÑ", callback_data=f"replacements_{task_id}"),
                InlineKeyboardButton("‚è∞ ÿßŸÑÿ™ÿ£ÿÆŸäÿ±", callback_data=f"delay_settings_{task_id}")
            ],
            [
                InlineKeyboardButton("üìä ÿßŸÑÿ•ÿ≠ÿµÿßÿ¶Ÿäÿßÿ™", callback_data=f"task_stats_{task_id}"),
                InlineKeyboardButton("üóëÔ∏è ÿ≠ÿ∞ŸÅ ÿßŸÑŸÖŸáŸÖÿ©", callback_data=f"delete_task_{task_id}")
            ],
            [
                InlineKeyboardButton("üîô ÿßŸÑÿπŸàÿØÿ©", callback_data="tasks_menu")
            ]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def confirmation_keyboard(action: str, item_id: int) -> InlineKeyboardMarkup:
        """Build confirmation keyboard"""
        keyboard = [
            [
                InlineKeyboardButton("‚úÖ ŸÜÿπŸÖ", callback_data=f"confirm_{action}_{item_id}"),
                InlineKeyboardButton("‚ùå ŸÑÿß", callback_data=f"cancel_{action}_{item_id}")
            ]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def back_keyboard(callback_data: str) -> InlineKeyboardMarkup:
        """Build simple back keyboard"""
        keyboard = [
            [InlineKeyboardButton("üîô ÿßŸÑÿπŸàÿØÿ©", callback_data=callback_data)]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def pagination_keyboard(current_page: int, total_pages: int, 
                          callback_prefix: str) -> InlineKeyboardMarkup:
        """Build pagination keyboard"""
        keyboard = []
        
        # Navigation buttons
        nav_buttons = []
        if current_page > 1:
            nav_buttons.append(
                InlineKeyboardButton("‚¨ÖÔ∏è", callback_data=f"{callback_prefix}_{current_page-1}")
            )
        
        nav_buttons.append(
            InlineKeyboardButton(f"{current_page}/{total_pages}", callback_data="noop")
        )
        
        if current_page < total_pages:
            nav_buttons.append(
                InlineKeyboardButton("‚û°Ô∏è", callback_data=f"{callback_prefix}_{current_page+1}")
            )
        
        keyboard.append(nav_buttons)
        
        return InlineKeyboardMarkup(keyboard)
